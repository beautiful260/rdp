name: Persistent RDP Session

on:
  push:  # Triggers the workflow on push to any branch
  workflow_dispatch:  # Allows the workflow to be manually triggered from the GitHub UI
  schedule:
    - cron: "0 * * * *"  # Runs every hour

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Download ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Terminal Services
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Start ngrok and Create Tunnel
      run: |
        .\ngrok\ngrok.exe tcp 3389 > ngrok.log &
        Start-Sleep -Seconds 10
        $ngrokUrl = (Get-Content ngrok.log | Select-String "url=tcp://.*").Matches.Value
        Write-Host "ngrok URL: $ngrokUrl"

    - name: Keep Alive
      run: |
        while ($true) { 
          if (-Not (Get-Process ngrok -ErrorAction SilentlyContinue)) {
            Write-Host "ngrok process not found. Re-establishing tunnel..."
            .\ngrok\ngrok.exe tcp 3389 > ngrok.log &
            Start-Sleep -Seconds 10
          }
          Write-Host "RDP Session Active"
          Start-Sleep -Seconds 300
        }
